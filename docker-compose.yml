version: '3.5'
services:
  api1: # API - Instância 01
    image: docker.io/akitaonrails/rinhabackendapi:latest
    environment:
      DB_HOST: db
      DB_POOL: 30
      RAILS_MAX_THREADS: 25
    hostname: api1
    depends_on:
      - db
      - memcached
    expose:
      - "3000"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.7GB'

  api2: # API - Instância 01
    image: docker.io/akitaonrails/rinhabackendapi:latest
    environment:
      DB_HOST: db
      DB_POOL: 30
      RAILS_MAX_THREADS: 25
    hostname: api2
    depends_on:
      - db
      - memcached
    expose:
      - "3000"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '0.7GB'

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.5GB'

  db: # Banco de dados
    image: docker.io/postgres
    environment:
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '0.8GB'

  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '0.3GB'
